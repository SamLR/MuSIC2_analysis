
================================================================================
Dictionary notes - terms used

-- beam --
position
target_mat
target_mat_thickness?
intensity

-- calibration --
source
threshold

----- header definition -----
<source: beam, none, Na, etc> <position: (x, y)> <thrs: int>
<target_material: Mg, Cu, None etc> <target_thickness: int>

================================================================================

Program Flow:

Start
|
Meta data exist?
Y       N
|       |
|       Read file_dict.txt
|       |
|       Strip Metadata, generate file names
|       |
|       Add pedestal file to header info
|       |
Save metadata
|
Apply filters to select data
|       |
|       for all metadata
|       |       |
|       |       For all filters
|       |       |       |
|       |       |       Does current filter match metadata value?
|       |       |       Y       N
|       |       |       |       |       
|       |       |       |       Remove from list
|       |       |       |       |       
Any thing left in the list after all loops exit?
|       
Data set required exist?
Y       N
|       |        
|       For each channel, for each data point use bin_data()
|       |        
|       Is there a pedestal recorded? 
|       Y       N        
|       |       |
|       |       Read pedestal file
|       |       |
|       |       Calculate pedestal (average of data)
|       |       |
|       Subtract pedestal from histogram (this will need a new function)
|       |       
|       Does ADC->photon data exist?
|       Y       N
|       |       |
|       |       choose data set (first set?)
|       |       |
|       |       apply bin_data()
|       |       |
|       |       smooth (apply gaussian kernel)
|       |       | 
|       |       peak_find()
|       |       | 
|       Convert ADC bins into photons
|       |  
Return data set
|
Plot data set
|
...
|     
Profit

class histogram dictionary
look at integrating histogram dict w/ Root possibly numpy etc for plotting?





















